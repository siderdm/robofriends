{"version":3,"sources":["components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["CardList","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchchange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAyBeA,EAtBE,SAAC,GAAe,EAAbC,OAElB,MAAM,IAAIC,MAAM,cCUHC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aACjC,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCECK,G,MATA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEJ,EAAMK,aCiBKC,E,kDAnBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAOFC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAI1B,OAAIG,KAAKJ,MAAMC,SACP,2DAEDG,KAAKX,MAAMK,a,GAhBQQ,aC+CZC,E,kDAzCd,aAAe,IAAD,8BACb,gBAaFC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEnB,YAAauB,EAAMC,OAAOC,SAbzC,EAAKX,MAAQ,CACZjB,OAAQ,GACRG,YAAa,IAJD,E,gEAQM,IAAD,OACnB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAEtB,OAAQiC,S,+BAO7B,IAAD,EACwBZ,KAAKJ,MAA7BjB,EADA,EACAA,OAAQG,EADR,EACQA,YACV+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAEvD,OAAQtC,EAAOwC,OAGd,sBAAKnC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WAPrB,6C,GAzBiBX,aCKHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.69b3f352.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\tif (true) {\r\n\t\tthrow new Error('NOOOOOOO!');\r\n\t} \r\n\treturn (\r\n\t\t<div>\r\n\t\t{\r\n\t   \trobots.map((user, i) => {\r\n\t\t\treturn (\r\n\t\t\t<Card \r\n\t\t\t\tkey={i} \r\n\t\t\t\tid={robots[i].id} \r\n\t\t\t\tname={robots[i].name} \r\n\t\t\t\temail={robots[i].email}\r\n\t\t\t\t/>\r\n\t\t);\r\n\t})\r\n\t   }\r\n   \t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t <div className='pa2'>\r\n\t\t <input\r\n\t\t \tclassName='pa3 ba b==green bg-lightest-blue'\r\n\t\t \ttype='search'\r\n\t\t \tplaceholder='search robots'\r\n\t\t \tonChange={searchChange}\r\n\t\t />\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\r\n\t\t);\r\n};\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\ncomponentDidCatch(error, info) {\r\n\tthis.setState({ hasError: true})\r\n}\r\n\r\nrender() {\r\n\tif (this.state.hasError) {\r\n\t\treturn <h1>Oooops.  That is not good</h1>\r\n\t}\r\n\treturn this.props.children\r\n}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t}\r\n}\r\n\r\ncomponentDidMount() {\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t.then(response=> response.json())\r\n\t.then(users => this.setState({ robots: users }));\r\n}\r\n\r\nonSearchchange = (event) => {\r\n\tthis.setState({ searchfield: event.target.value })\r\n}\r\n\r\n\trender() { \r\n\t\tconst { robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\treturn !robots.length ?\r\n\t<h1>Loading</h1> :\r\n\t(\r\n\t\t<div className='tc'>\r\n\t\t\t<h1 className='f1'>Robofriends</h1>\r\n\t\t\t<SearchBox searchChange={this.onSearchchange}/>\r\n\t\t\t<Scroll>\r\n\t\t\t<ErrorBoundry>\r\n\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t</ErrorBoundry>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}